<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Prokoptasis</title>
    <link>http://prokoptasis.github.io/docs/documents/backend/go/</link>
    <description>Recent content in Go on Prokoptasis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language><atom:link href="http://prokoptasis.github.io/docs/documents/backend/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GO Basic</title>
      <link>http://prokoptasis.github.io/docs/documents/backend/go/go01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://prokoptasis.github.io/docs/documents/backend/go/go01/</guid>
      <description>GO Basic #   Go 기본적인 문법 정리. 하기 사이트 참조.
예제로 배우는 Go 프로그래밍
Hello World #  package main func main() { println(&amp;#34;Hello World!&amp;#34;) } Declare #  선언 및 할당 방식
 declare ...  package main func main() { // 선언 및 할당 	var a int var b float32 = 11. println(a, b) // 선언 및 할당 	a = 10 b = 12.0 println(a, b) // 상수 	const c int = 10 const d string = &amp;#34;Hello&amp;#34; println(c, d) // 상수 나열 	const ( Visa = &amp;#34;Visa&amp;#34; Master = &amp;#34;MasterCard&amp;#34; Amex = &amp;#34;American Express&amp;#34; ) println(Visa, Master, Amex) // 상수 나열 	const ( Apple = iota Grape Orage ) println(Apple, Grape, Orage) }     Reserved Keywords #  GO 25개 예약어</description>
    </item>
    
    <item>
      <title>GO Advanced</title>
      <link>http://prokoptasis.github.io/docs/documents/backend/go/go02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://prokoptasis.github.io/docs/documents/backend/go/go02/</guid>
      <description>Go Advanced #   Go 활용 정리. 하기 사이트 참조.
노마드 코더 - 쉽고 빠른 Go 시작하기
Account #   account ...  main.go
package main import ( &amp;#34;fmt&amp;#34; accounts &amp;#34;./accounts&amp;#34; ) func main() { // newAccount 	acct := accounts.NewAccount(&amp;#34;jhook&amp;#34;) fmt.Println(&amp;#34;01 : &amp;#34;, acct) // Deposit 	acct.Deposit(1000) fmt.Println(&amp;#34;02 : &amp;#34;, acct) // Withdraw O 	err := acct.Withdraw(300) fmt.Println(&amp;#34;03 : &amp;#34;, acct) if err != nil { fmt.</description>
    </item>
    
    <item>
      <title>GO DB 연결</title>
      <link>http://prokoptasis.github.io/docs/documents/backend/go/go03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://prokoptasis.github.io/docs/documents/backend/go/go03/</guid>
      <description>Go Oralce DB 연결 #   Go의 Godror을 이용한 간단한 Oracle DB 연결 및 조회
Oracle DB 연결 #   oracle db 연결 ...  main.go
package main import ( &amp;#34;database/sql&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; _ &amp;#34;github.com/godror/godror&amp;#34; ) type str_item struct { item_cd string item_nm string } type str_item_ls struct { str_item []str_item } func (item_ls *str_item_ls) AddItem(item str_item) []str_item { item_ls.str_item = append(item_ls.str_item, item) return item_ls.str_item } func get_list(sql_str string, item_cnt int, item_list *str_item_ls, c chan bool) { // 본인 계정에 맞는 접속 정보 	db, err := sql.</description>
    </item>
    
  </channel>
</rss>
